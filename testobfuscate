--// Utility Functions
local function randomString(length)
    local charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local result = {}
    for _ = 1, length do
        local index = math.random(1, #charset)
        table.insert(result, charset:sub(index, index))
    end
    return table.concat(result)
end

local function stringToBinary(input)
    local binaryParts = {}
    for i = 1, #input do
        local byte = string.byte(input:sub(i, i))
        table.insert(binaryParts, string.format("%08b", byte))
    end
    return table.concat(binaryParts, " ")
end

local function createFakeCode(variablePrefix, loadFunc, sourceLen, iterations, range)
    local fakeCode = {}
    for _ = 1, iterations do
        local varName = variablePrefix .. randomString(math.random(15, 20))
        local randomContent = "return " .. randomString(math.random(unpack(range)))
        local byteSequence = {}
        for i = 1, #randomContent do
            table.insert(byteSequence, "\\" .. string.byte(randomContent:sub(i, i)))
        end
        local byteCode = string.format('local %s = {%s}; local %s = %s(%s);', varName, table.concat(byteSequence, ", "), varName, loadFunc, varName)
        table.insert(fakeCode, byteCode)
    end
    return table.concat(fakeCode, " ")
end

--// Main Obfuscation Function
local function obfuscate(source, varName, watermark)
    warn("Started obfuscation process.")
    varName = varName or "Taurus_"
    watermark = watermark or "WaterMark | Secure by GhostyDuckyy#7698"
    watermark = "--[[\n    " .. tostring(watermark) .. "\n]]--\n\n"

    source = source or [[print("Hello World!")]]
    local startTime = tick()

    local randomVars = {
        TableByte = varName .. randomString(math.random(15, 20)),
        Loadstring = varName .. randomString(math.random(15, 20))
    }

    -- Generate source bytes
    local sourceBytes = {}
    for i = 1, #source do
        table.insert(sourceBytes, "\\" .. string.byte(source:sub(i, i)))
    end

    local tableByteCode = string.format("local %s = {%s};", randomVars.TableByte, table.concat(sourceBytes, ", "))
    local loadstringCode = string.format(
        'local %s = loadstring(table.concat({"\\114", "\\101", "\\116", "\\117", "\\114", "\\110", "\\32", "\\102", "\\117", "\\110", "\\99", "\\116", "\\105", "\\111", "\\110", "\\40", "\\98", "\\121", "\\116", "\\101", "\\41", "\\10", "\\32", "\\32", "\\32", "\\32", "\\105", "\\102", "\\32", "\\116", "\\121", "\\112", "\\101", "\\111", "\\102", "\\40", "\\98", "\\121", "\\116", "\\101", "\\41", "\\32", "\\61", "\\61", "\\32", "\\34", "\\116", "\\97", "\\98", "\\108", "\\101", "\\34", "\\32", "\\116", "\\104", "\\101", "\\110", "\\10", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\108", "\\111", "\\97", "\\100", "\\115", "\\116", "\\114", "\\105", "\\110", "\\103", "\\40", "\\116", "\\97", "\\98", "\\108", "\\101", "\\46", "\\99", "\\111", "\\110", "\\99", "\\97", "\\116", "\\40", "\\98", "\\121", "\\116", "\\101", "\\41", "\\41", "\\40", "\\41", "\\10", "\\32", "\\32", "\\32", "\\32", "\\101", "\\108", "\\115", "\\101", "\\10", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\98", "\\121", "\\116", "\\101", "\\32", "\\61", "\\32", "\\123", "\\98", "\\121", "\\116", "\\101", "\\125", "\\10", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\32", "\\108", "\\111", "\\97", "\\100", "\\115", "\\116", "\\114", "\\105", "\\110", "\\103", "\\40", "\\116", "\\97", "\\98", "\\108", "\\101", "\\46", "\\99", "\\111", "\\110", "\\99", "\\97", "\\116", "\\40", "\\98", "\\121", "\\116", "\\101", "\\41", "\\41", "\\40", "\\41", "\\10", "\\32", "\\32", "\\32", "\\32", "\\101", "\\110", "\\100", "\\10", "\\101", "\\110", "\\100", "\\10",}))()',
        randomVars.Loadstring
    )

    local trollFuncCode = string.format("function() %s end", createFakeCode(varName, randomVars.Loadstring, #source, math.random(30, 50), {50, 150}))
    local trollVarCode = string.format("local %s = %s;", varName .. randomString(math.random(15, 20)), trollFuncCode)

    local finalCode = table.concat({
        watermark,
        trollVarCode,
        loadstringCode,
        createFakeCode(varName, randomVars.Loadstring, #source, math.random(2, 4), {400, 600}),
        tableByteCode,
        string.format("local %s = %s(%s);", varName .. randomString(math.random(15, 20)), randomVars.Loadstring, randomVars.TableByte),
        createFakeCode(varName, randomVars.Loadstring, #source, math.random(2, 4), {#source // 2, #source * 2})
    }, " ")

    setclipboard(finalCode)
    warn("Obfuscation completed in " .. tostring(tick() - startTime) .. " seconds.")
end

--// Module Export
return function(source, customVarName, watermark)
    task.spawn(function()
        obfuscate(source, customVarName, watermark)
    end)
end
